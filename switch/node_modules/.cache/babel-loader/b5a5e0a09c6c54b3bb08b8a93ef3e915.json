{"ast":null,"code":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving horizontally in the X axis. The higher than friction, the faster the body will slow down once force stops being applied to it.\n *\n * @namespace Phaser.Physics.Arcade.Components.Friction\n * @since 3.0.0\n */\nvar Friction = {\n  /**\n   * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving.\n   * The higher than friction, the faster the body will slow down once force stops being applied to it.\n   *\n   * @method Phaser.Physics.Arcade.Components.Friction#setFriction\n   * @since 3.0.0\n   *\n   * @param {number} x - The amount of horizontal friction to apply.\n   * @param {number} [y=x] - The amount of vertical friction to apply.\n   *\n   * @return {this} This Game Object.\n   */\n  setFriction: function setFriction(x, y) {\n    this.body.friction.set(x, y);\n    return this;\n  },\n\n  /**\n   * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving horizontally in the X axis.\n   * The higher than friction, the faster the body will slow down once force stops being applied to it.\n   *\n   * @method Phaser.Physics.Arcade.Components.Friction#setFrictionX\n   * @since 3.0.0\n   *\n   * @param {number} x - The amount of friction to apply.\n   *\n   * @return {this} This Game Object.\n   */\n  setFrictionX: function setFrictionX(x) {\n    this.body.friction.x = x;\n    return this;\n  },\n\n  /**\n   * Sets the friction (e.g. the amount of velocity reduced over time) of the physics body when moving vertically in the Y axis.\n   * The higher than friction, the faster the body will slow down once force stops being applied to it.\n   *\n   * @method Phaser.Physics.Arcade.Components.Friction#setFrictionY\n   * @since 3.0.0\n   *\n   * @param {number} x - The amount of friction to apply.\n   *\n   * @return {this} This Game Object.\n   */\n  setFrictionY: function setFrictionY(y) {\n    this.body.friction.y = y;\n    return this;\n  }\n};\nmodule.exports = Friction;","map":null,"metadata":{},"sourceType":"script"}