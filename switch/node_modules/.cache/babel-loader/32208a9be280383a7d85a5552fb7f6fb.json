{"ast":null,"code":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nvar Class = require('../../utils/Class');\n\nvar Components = require('./components');\n\nvar Image = require('../../gameobjects/image/Image');\n/**\n * @classdesc\n * An Arcade Physics Image is an Image with an Arcade Physics body and related components.\n * The body can be dynamic or static.\n *\n * The main difference between an Arcade Image and an Arcade Sprite is that you cannot animate an Arcade Image.\n *\n * @class Image\n * @extends Phaser.GameObjects.Image\n * @memberof Phaser.Physics.Arcade\n * @constructor\n * @since 3.0.0\n *\n * @extends Phaser.Physics.Arcade.Components.Acceleration\n * @extends Phaser.Physics.Arcade.Components.Angular\n * @extends Phaser.Physics.Arcade.Components.Bounce\n * @extends Phaser.Physics.Arcade.Components.Debug\n * @extends Phaser.Physics.Arcade.Components.Drag\n * @extends Phaser.Physics.Arcade.Components.Enable\n * @extends Phaser.Physics.Arcade.Components.Friction\n * @extends Phaser.Physics.Arcade.Components.Gravity\n * @extends Phaser.Physics.Arcade.Components.Immovable\n * @extends Phaser.Physics.Arcade.Components.Mass\n * @extends Phaser.Physics.Arcade.Components.Size\n * @extends Phaser.Physics.Arcade.Components.Velocity\n * @extends Phaser.GameObjects.Components.Alpha\n * @extends Phaser.GameObjects.Components.BlendMode\n * @extends Phaser.GameObjects.Components.Depth\n * @extends Phaser.GameObjects.Components.Flip\n * @extends Phaser.GameObjects.Components.GetBounds\n * @extends Phaser.GameObjects.Components.Origin\n * @extends Phaser.GameObjects.Components.Pipeline\n * @extends Phaser.GameObjects.Components.ScrollFactor\n * @extends Phaser.GameObjects.Components.Size\n * @extends Phaser.GameObjects.Components.Texture\n * @extends Phaser.GameObjects.Components.Tint\n * @extends Phaser.GameObjects.Components.Transform\n * @extends Phaser.GameObjects.Components.Visible\n *\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\n * @param {number} x - The horizontal position of this Game Object in the world.\n * @param {number} y - The vertical position of this Game Object in the world.\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\n */\n\n\nvar ArcadeImage = new Class({\n  Extends: Image,\n  Mixins: [Components.Acceleration, Components.Angular, Components.Bounce, Components.Debug, Components.Drag, Components.Enable, Components.Friction, Components.Gravity, Components.Immovable, Components.Mass, Components.Size, Components.Velocity],\n  initialize: function ArcadeImage(scene, x, y, texture, frame) {\n    Image.call(this, scene, x, y, texture, frame);\n    /**\n     * This Game Object's Physics Body.\n     *\n     * @name Phaser.Physics.Arcade.Image#body\n     * @type {?(Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody)}\n     * @default null\n     * @since 3.0.0\n     */\n\n    this.body = null;\n  }\n});\nmodule.exports = ArcadeImage;","map":null,"metadata":{},"sourceType":"script"}