{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Phaser from 'phaser';\nexport var GameBoard =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(GameBoard, _Phaser$Scene);\n\n  function GameBoard() {\n    _classCallCheck(this, GameBoard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GameBoard).call(this, {\n      key: 'GameBoard'\n    }));\n  }\n\n  _createClass(GameBoard, [{\n    key: \"create\",\n    value: function create() {\n      this.gameBoard = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]; //display board\n\n      var boardbg = this.add.image(400, 80, 'boardbg');\n      boardbg.setOrigin(0, 0).setScale(2.8, 2.8);\n      var x_pos1 = 0;\n      var y_pos1 = 0;\n\n      for (var i = 0; i < 6; i++) {\n        for (var j = 0; j < 6; j++) {\n          this.blank = this.add.image(405 + x_pos1, 85 + y_pos1, 'blank').setScale(1, 1.5).setOrigin(0, 0).setInteractive().setDataEnabled().data.set('blank', 53);\n          x_pos1 += 65;\n        }\n\n        y_pos1 += 65;\n        x_pos1 = 0;\n      }\n\n      var card_number = 0;\n      var nums = [],\n          ranNums = [];\n\n      for (var k = 0; k < 52; k++) {\n        nums.push(k);\n      }\n\n      var m = nums.length,\n          n = 0;\n\n      while (m--) {\n        n = Math.floor(Math.random() * (m + 1));\n        ranNums.push(nums[n]);\n        nums.splice(n, 1);\n      } //display board\n\n\n      var x_pos = 0;\n      var y_pos = 0;\n\n      for (var i = 0; i < 6; i++) {\n        for (var j = 0; j < 6; j++) {\n          var generatecard = ranNums[card_number];\n          this.card = this.add.sprite(405 + x_pos, 85 + y_pos, 'cards', generatecard);\n          this.card.setScale(0.13, 0.13).setOrigin(0, 0).setInteractive().setDataEnabled().data.set('card_number', card_number);\n          x_pos += 65;\n          card_number++;\n        }\n\n        y_pos += 65;\n        x_pos = 0;\n      }\n\n      this.chess = this.add.image(405, 85, 'chess_red').setOrigin(0, 0).setScale(0.02, 0.02);\n      this.clickedBox(ranNums);\n    }\n  }, {\n    key: \"clickedBox\",\n    value: function clickedBox(ranNums) {\n      var _this = this;\n\n      var arrangepostion = 0;\n      this.input.on('gameobjectdown', function (pointer, gameObject) {\n        for (var i = 0; i < 36; i++) {\n          if (_this.gameBoard[i] == i && gameObject.data.get('card_number') == i) {\n            if (gameObject.x == _this.chess.x || gameObject.y == _this.chess.y) {\n              _this.chess.setX(gameObject.x);\n\n              _this.chess.setY(gameObject.y);\n\n              gameObject.setX(6 + arrangepostion);\n              gameObject.setY(40);\n              gameObject.setScale(0.08, 0.08);\n              arrangepostion += 20; //find card index \n\n              console.log(ranNums[i]);\n            }\n          }\n\n          if (_this.gameBoard[i] == i && gameObject.data.get('blank') == 53) {\n            if (gameObject.x == _this.chess.x || gameObject.y == _this.chess.y) {\n              _this.chess.setX(gameObject.x);\n\n              _this.chess.setY(gameObject.y);\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(time, delta) {}\n  }]);\n\n  return GameBoard;\n}(Phaser.Scene);","map":{"version":3,"sources":["C:\\Users\\shirl\\Documents\\GitHub\\the-switch-game\\switch\\src\\Pages\\phaser\\scenes\\GameBoard.js"],"names":["Phaser","GameBoard","key","gameBoard","boardbg","add","image","setOrigin","setScale","x_pos1","y_pos1","i","j","blank","setInteractive","setDataEnabled","data","set","card_number","nums","ranNums","k","push","m","length","n","Math","floor","random","splice","x_pos","y_pos","generatecard","card","sprite","chess","clickedBox","arrangepostion","input","on","pointer","gameObject","get","x","y","setX","setY","console","log","time","delta","Scene"],"mappings":"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","sourcesContent":["import Phaser from 'phaser';\r\n\r\nexport class GameBoard extends Phaser.Scene {\r\n\tconstructor() {\r\n\t\tsuper({\r\n\t\t\tkey: 'GameBoard'\r\n\t\t});\r\n\t}\r\n\tcreate() {\r\n\t\tthis.gameBoard = [0,1,2,3,4,5,6,7,8,9,10,\r\n\t\t\t11,12,13,14,15,16,17,18,19,20,21,22,\r\n\t\t\t23,24,25,26,27,28,29,30,31,32,33,34,35,36];\r\n\t\t \r\n        //display board\r\n\t\tlet boardbg = this.add.image(400, 80, 'boardbg');\r\n\t\tboardbg.setOrigin(0, 0).setScale(2.8,2.8);\r\n\t\tlet x_pos1=0;\r\n\t\tlet y_pos1=0;\r\n\t\tfor(var i=0;i<6;i++){\r\n\t\t\tfor(var j=0 ;j<6;j++){\r\n\t\t\t   this.blank=this.add.image(405+x_pos1,85+y_pos1,'blank').setScale(1,1.5).setOrigin(0, 0).setInteractive().setDataEnabled().data.set('blank', 53);\r\n\t\t\t\tx_pos1+=65;\r\n\t\t\t }\r\n\t\t\t   y_pos1+=65;\r\n\t\t\t   x_pos1=0;\r\n\t\t   }\r\n\t\t   let card_number=0;\r\n\t\t   let nums=[],\r\n\t\t\t   ranNums = [];\r\n\t\t  for(var k=0;k<52;k++){\r\n\t\t   nums.push(k);\r\n\t\t\t}\r\n\t\t   let m = nums.length,\r\n\t\t\t   n = 0;\r\n\t   while (m--) {\r\n\t\t   n = Math.floor(Math.random() * (m+1));\r\n\t\t   ranNums.push(nums[n]);\r\n\t\t   nums.splice(n,1);\r\n\t   }\r\n\t   //display board\r\n\t\t\tlet x_pos=0;\r\n\t\t\tlet y_pos=0;  \r\n\t\t   for(var i=0;i<6;i++){\r\n\t\t\tfor(var j=0 ;j<6;j++){\r\n\t\t\t   var generatecard=ranNums[card_number]\r\n\t\t\t   this.card=this.add.sprite(405+x_pos,85+y_pos,'cards',generatecard)\r\n\t\t\t   this.card.setScale(0.13,0.13).setOrigin(0, 0).setInteractive().setDataEnabled().data.set('card_number', card_number);\r\n\t\t\t\tx_pos+=65;\r\n\t\t\t\tcard_number++;\r\n\t\t\t }\r\n\t\t\t   y_pos+=65;\r\n\t\t\t   x_pos=0;\r\n\t\t   }\r\n\t\t   this.chess=this.add.image(405,85,'chess_red').setOrigin(0, 0).setScale(0.02,0.02);\r\n\t\t   this.clickedBox(ranNums);\r\n\t\t   \r\n\r\n\t}\r\n\r\n\tclickedBox(ranNums){\r\n\t\tvar arrangepostion=0;\r\n\t\tthis.input.on('gameobjectdown', (pointer, gameObject) => {\r\n\t\tfor(var i=0;i<36;i++){\r\n\t\t\tif(this.gameBoard[i] == i && gameObject.data.get('card_number') == i) {\r\n\t\t\t\tif(gameObject.x==this.chess.x||gameObject.y==this.chess.y){\r\n\t\t\t\tthis.chess.setX(gameObject.x)\r\n\t\t\t    this.chess.setY(gameObject.y)\r\n\t\t\t\tgameObject.setX(6+arrangepostion);\r\n\t\t\t\tgameObject.setY(40);\r\n\t\t\t\tgameObject.setScale(0.08,0.08)\t\r\n\t\t\t\tarrangepostion+=20;\t\r\n\t\t\t\t//find card index \r\n\t\t\t\tconsole.log(ranNums[i])\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\t\tif(this.gameBoard[i] == i && gameObject.data.get('blank') == 53) {\r\n\t\t\tif(gameObject.x==this.chess.x||gameObject.y==this.chess.y){\r\n\t\t\tthis.chess.setX(gameObject.x)\r\n\t\t\tthis.chess.setY(gameObject.y)\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\r\n\t}\t\r\n\t\t\t\r\n\t});\r\n}\r\n\t\r\n\tupdate(time, delta) {}\r\n}"]},"metadata":{},"sourceType":"module"}