{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * Sets a value in an object, allowing for dot notation to control the depth of the property.\r\n * \r\n * For example:\r\n * \r\n * ```javascript\r\n * var data = {\r\n *   world: {\r\n *     position: {\r\n *       x: 200,\r\n *       y: 100\r\n *     }\r\n *   }\r\n * };\r\n * \r\n * SetValue(data, 'world.position.y', 300);\r\n * \r\n * console.log(data.world.position.y); // 300\r\n * ```\r\n *\r\n * @function Phaser.Utils.Objects.SetValue\r\n * @since 3.17.0\r\n *\r\n * @param {object} source - The object to set the value in.\r\n * @param {string} key - The name of the property in the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`)\r\n * @param {any} value - The value to set into the property, if found in the source object.\r\n *\r\n * @return {boolean} `true` if the property key was valid and the value was set, otherwise `false`.\r\n */\nvar SetValue = function SetValue(source, key, value) {\n  if (!source || typeof source === 'number') {\n    return false;\n  } else if (source.hasOwnProperty(key)) {\n    source[key] = value;\n    return true;\n  } else if (key.indexOf('.') !== -1) {\n    var keys = key.split('.');\n    var parent = source;\n    var prev = source; //  Use for loop here so we can break early\n\n    for (var i = 0; i < keys.length; i++) {\n      if (parent.hasOwnProperty(keys[i])) {\n        //  Yes it has a key property, let's carry on down\n        prev = parent;\n        parent = parent[keys[i]];\n      } else {\n        return false;\n      }\n    }\n\n    prev[keys[keys.length - 1]] = value;\n    return true;\n  }\n\n  return false;\n};\n\nmodule.exports = SetValue;","map":null,"metadata":{},"sourceType":"script"}