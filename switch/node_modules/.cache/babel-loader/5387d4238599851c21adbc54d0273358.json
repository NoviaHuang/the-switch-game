{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Phaser from 'phaser';\nimport { Blank } from '../objects/Blank';\nimport { Player } from '../objects/Player';\nimport { Card } from '../objects/Card';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Amplify, { Auth } from 'aws-amplify';\nimport * as mutations from '../../../graphql/mutations';\nimport * as subscriptions from '../../../graphql/subscriptions';\nimport * as queries from '../../../graphql/queries';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport aws_config from '../../../aws-exports';\nimport gql from 'graphql-tag';\nvar client = new AWSAppSyncClient({\n  url: aws_config.aws_appsync_graphqlEndpoint,\n  region: aws_config.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.API_KEY,\n    apiKey: aws_config.aws_appsync_apiKey\n  }\n});\nexport var GameBoard =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(GameBoard, _Phaser$Scene);\n\n  function GameBoard() {\n    _classCallCheck(this, GameBoard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GameBoard).call(this, {\n      key: 'GameBoard'\n    }));\n  }\n\n  _createClass(GameBoard, [{\n    key: \"create\",\n    value: function create() {\n      this.gameBoard = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]; //display board\n\n      var boardbg = this.add.image(400, 80, 'boardbg');\n      boardbg.setOrigin(0, 0).setScale(2.8, 2.8);\n      var x_pos1 = 0;\n      var y_pos1 = 0;\n\n      for (var i = 0; i < 6; i++) {\n        for (var j = 0; j < 6; j++) {\n          this.blank = new Blank(this, 405 + x_pos1, 85 + y_pos1, 'blank').data.set('card_number', 53);\n          x_pos1 += 65;\n        }\n\n        y_pos1 += 65;\n        x_pos1 = 0;\n      }\n\n      var card_number = 0;\n      var nums = [],\n          ranNums = [];\n\n      for (var k = 0; k < 52; k++) {\n        nums.push(k);\n      }\n\n      var m = nums.length,\n          n = 0;\n\n      while (m--) {\n        n = Math.floor(Math.random() * (m + 1));\n        ranNums.push(nums[n]);\n        nums.splice(n, 1);\n      } //display board\n\n\n      var x_pos = 0;\n      var y_pos = 0;\n\n      for (var i = 0; i < 6; i++) {\n        for (var j = 0; j < 6; j++) {\n          var generatecard = ranNums[card_number];\n          this.card = new Card(this, 405 + x_pos, 85 + y_pos, 'cards', generatecard).setOrigin(0, 0).setInteractive().setDataEnabled();\n          this.card.data.set('card_number', card_number);\n          x_pos += 65;\n          card_number++;\n        }\n\n        y_pos += 65;\n        x_pos = 0;\n      }\n\n      var player1 = new Player(this, 405, 85, 'chess_red', 1).setOrigin(0, 0);\n      var player2 = new Player(this, 730, 85, 'chess_blue', 2).setOrigin(0, 0);\n      this.player = [];\n      this.player.push(player1);\n      this.player.push(player2);\n      var gameState = 'gaming'; //need user name array\n\n      var userName = ['switch', 'noviah']; //initalize the data\n\n      this.initCardData(0, 405, 85, 'switch');\n      this.initCardData(0, 730, 85, 'noviah');\n      var seat = 0;\n      this.clickedBox(seat, userName);\n    } //check if the login user is in his round\n\n  }, {\n    key: \"checkUserInfo\",\n    value: function checkUserInfo(name, x, y) {\n      var _this = this;\n\n      Auth.currentUserInfo().then(function (userInfo) {\n        var username = userInfo.username;\n\n        if (name == username) {\n          _this.updateCardData(3, x, y);\n        } else {\n          console.log('invaild movement');\n        }\n      });\n    } //move card\n\n  }, {\n    key: \"decideMove\",\n    value: function decideMove(x, y, player) {\n      player.setX(x);\n      player.setY(y);\n    } //move the card to the side\n\n  }, {\n    key: \"handlePlayerCard\",\n    value: function handlePlayerCard(card, arrangepostion, seat, data) {\n      if (seat == 0 && data != 53) {\n        arrangepostion -= 10;\n        card.setX(10 + arrangepostion);\n        card.setY(70);\n        card.setScale(0.1, 0.1);\n      } else if (seat == 1 && data != 53) {\n        arrangepostion -= 10;\n        card.setX(900 + arrangepostion);\n        card.setY(70);\n        card.setScale(0.1, 0.1);\n      }\n    } //************************************************ */\n    //the thing you need\n    //*********************************************** */\n\n  }, {\n    key: \"round\",\n    value: function () {\n      var _round = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  var nameWeGot1, result1;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return client.hydrated();\n\n                        case 2:\n                          //const getUser = await Auth.currentAuthenticatedUser();\n                          nameWeGot1 = 'switch';\n                          _context.next = 5;\n                          return client.query({\n                            query: gql(queries.getQw),\n                            variables: {\n                              username: nameWeGot1\n                            },\n                            fetchPolicy: 'network-only'\n                          });\n\n                        case 5:\n                          result1 = _context.sent;\n\n                        case 6:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }))();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function round() {\n        return _round.apply(this, arguments);\n      }\n\n      return round;\n    }()\n  }, {\n    key: \"initCardData\",\n    value: function () {\n      var _initCardData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(card, x, y, theusername) {\n        var cardV, xV, yV, name, thething, newThing;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                cardV = card;\n                console.log(cardV);\n                xV = x;\n                console.log(\"x : \" + xV);\n                yV = y;\n                console.log(\"y : \" + yV);\n                name = theusername;\n                console.log('your name : ' + name);\n                thething = {\n                  username: name,\n                  whichCard: cardV,\n                  x: xV,\n                  y: yV\n                };\n                _context3.next = 11;\n                return API.graphql(graphqlOperation(mutations.updateQw, {\n                  input: thething\n                }));\n\n              case 11:\n                newThing = _context3.sent;\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function initCardData(_x, _x2, _x3, _x4) {\n        return _initCardData.apply(this, arguments);\n      }\n\n      return initCardData;\n    }()\n  }, {\n    key: \"updateCardData\",\n    value: function () {\n      var _updateCardData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(card, x, y) {\n        var cardV, xV, yV, getUser, name, thething, newThing;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                cardV = card;\n                console.log(cardV);\n                xV = x;\n                console.log(\"x : \" + xV);\n                yV = y;\n                console.log(\"y : \" + yV);\n                _context4.next = 8;\n                return Auth.currentAuthenticatedUser();\n\n              case 8:\n                getUser = _context4.sent;\n                name = getUser.username;\n                console.log('your name : ' + name);\n                thething = {\n                  username: name,\n                  whichCard: cardV,\n                  x: xV,\n                  y: yV\n                };\n                _context4.next = 14;\n                return API.graphql(graphqlOperation(mutations.updateQw, {\n                  input: thething\n                }));\n\n              case 14:\n                newThing = _context4.sent;\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function updateCardData(_x5, _x6, _x7) {\n        return _updateCardData.apply(this, arguments);\n      }\n\n      return updateCardData;\n    }() //click the card and make it move\n\n  }, {\n    key: \"clickedBox\",\n    value: function clickedBox(seat, userName) {\n      var _this2 = this;\n\n      var arrangepostion = 0;\n      this.input.on('gameobjectdown', function (pointer, gameObject) {\n        for (var i = 0; i < 36; i++) {\n          if (_this2.gameBoard[i] == i) {\n            if (gameObject.x == _this2.player[seat].x || gameObject.y == _this2.player[seat].y) {\n              _this2.checkUserInfo(userName[seat], gameObject.x, gameObject.y, _this2.player[seat]); // this.handlePlayerCard(gameObject,arrangepostion,seat,gameObject.data.get('card_number'))\n              // arrangepostion+=15\n\n\n              break;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(time, delta) {\n      var _this3 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var nameWeGot1, result1;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return client.hydrated();\n\n              case 2:\n                //const getUser = await Auth.currentAuthenticatedUser();\n                nameWeGot1 = 'switch';\n                _context5.next = 5;\n                return client.query({\n                  query: gql(queries.getQw),\n                  variables: {\n                    username: nameWeGot1\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 5:\n                result1 = _context5.sent;\n\n                if (result1.data.getQw.whichCard == 3) {\n                  _this3.decideMove(result1.data.getQw.x, result1.data.getQw.y, _this3.player[0]);\n\n                  _this3.updateCardData(2, result1.data.getQw.x, result1.data.getQw.y);\n                }\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  }]);\n\n  return GameBoard;\n}(Phaser.Scene);","map":{"version":3,"sources":["C:\\Users\\shirl\\Documents\\GitHub\\the-switch-game\\switch\\src\\Pages\\phaser\\scenes\\GameBoard.js"],"names":["Phaser","Blank","Player","Card","API","graphqlOperation","Amplify","Auth","mutations","subscriptions","queries","ConsoleLogger","AWSAppSyncClient","AUTH_TYPE","aws_config","gql","client","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","auth","type","API_KEY","apiKey","aws_appsync_apiKey","GameBoard","key","gameBoard","boardbg","add","image","setOrigin","setScale","x_pos1","y_pos1","i","j","blank","data","set","card_number","nums","ranNums","k","push","m","length","n","Math","floor","random","splice","x_pos","y_pos","generatecard","card","setInteractive","setDataEnabled","player1","player2","player","gameState","userName","initCardData","seat","clickedBox","name","x","y","currentUserInfo","then","userInfo","username","updateCardData","console","log","setX","setY","arrangepostion","hydrated","nameWeGot1","query","getQw","variables","fetchPolicy","result1","theusername","cardV","xV","yV","thething","whichCard","graphql","updateQw","input","newThing","currentAuthenticatedUser","getUser","on","pointer","gameObject","checkUserInfo","time","delta","decideMove","Scene"],"mappings":"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","sourcesContent":["import Phaser from 'phaser';\r\nimport {Blank} from '../objects/Blank';\r\nimport {Player} from '../objects/Player';\r\nimport {Card} from '../objects/Card';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport Amplify, { Auth } from 'aws-amplify';\r\nimport * as mutations from '../../../graphql/mutations';\r\nimport * as subscriptions from '../../../graphql/subscriptions'\r\nimport * as queries from '../../../graphql/queries'\r\n\r\nimport { ConsoleLogger } from '@aws-amplify/core';\r\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\r\nimport aws_config from '../../../aws-exports';\r\nimport gql from 'graphql-tag';\r\n\r\nconst client = new AWSAppSyncClient({\r\n  url: aws_config.aws_appsync_graphqlEndpoint,\r\n  region: aws_config.aws_appsync_region,\r\n  auth: {\r\n    type: AUTH_TYPE.API_KEY,\r\n    apiKey: aws_config.aws_appsync_apiKey,\r\n  }\r\n});\r\n\r\nexport class GameBoard extends Phaser.Scene {\r\n\tconstructor() {\r\n\t\tsuper({\r\n\t\t\tkey: 'GameBoard',\r\n\t\t});\r\n\t\t\r\n\r\n\t}\r\n\t\r\n\r\n\r\n\tcreate() {\r\n\r\n\t\tthis.gameBoard = [0,1,2,3,4,5,6,7,8,9,10,\r\n\t\t\t11,12,13,14,15,16,17,18,19,20,21,22,\r\n\t\t\t23,24,25,26,27,28,29,30,31,32,33,34,35,36];\r\n\t\t\r\n        //display board\r\n\t\tlet boardbg = this.add.image(400, 80, 'boardbg');\r\n\t\tboardbg.setOrigin(0, 0).setScale(2.8,2.8);\r\n\t\tlet x_pos1=0;\r\n\t\tlet y_pos1=0;\r\n\t\tfor(var i=0;i<6;i++){\r\n\t\t\tfor(var j=0 ;j<6;j++){\r\n\t\t\t   this.blank=new Blank(this,405+x_pos1,85+y_pos1,'blank').data.set('card_number', 53);\r\n\t\t\t\tx_pos1+=65;\r\n\t\t\t }\r\n\t\t\t   y_pos1+=65;\r\n\t\t\t   x_pos1=0;\r\n\t\t   }\r\n\t\t   let card_number=0;\r\n\t\t   let nums=[],\r\n\t\t\t   ranNums = [];\r\n\t\t  for(var k=0;k<52;k++){\r\n\t\t   nums.push(k);\r\n\t\t\t}\r\n\t\t   let m = nums.length,\r\n\t\t\t   n = 0;\r\n\t   while (m--) {\r\n\t\t   n = Math.floor(Math.random() * (m+1));\r\n\t\t   ranNums.push(nums[n]);\r\n\t\t   nums.splice(n,1);\r\n\t   }\r\n\t   //display board\r\n\t\t\tlet x_pos=0;\r\n\t\t\tlet y_pos=0;  \r\n\t\t   for(var i=0;i<6;i++){\r\n\t\t\tfor(var j=0 ;j<6;j++){\r\n\t\t\t   var generatecard=ranNums[card_number]\r\n\t\t\t   this.card=new Card(this,405+x_pos,85+y_pos,'cards',generatecard).setOrigin(0, 0).setInteractive().setDataEnabled()\r\n\t\t\t   this.card.data.set('card_number', card_number);\r\n\t\t\t\tx_pos+=65;\r\n\t\t\t\tcard_number++;\r\n\t\t\t }\r\n\t\t\t   y_pos+=65;\r\n\t\t\t   x_pos=0;\r\n\t\t   }\r\n\t\t\t let player1=new Player(this,405,85,'chess_red',1).setOrigin(0,0)\r\n\t\t\t let player2=new Player(this,730,85,'chess_blue',2).setOrigin(0,0)\r\n\r\n\r\n\r\n\t\t\t this.player=[]\r\n\t\t\t this.player.push(player1)\r\n\t\t\t this.player.push(player2)\r\n\t\t\t\t\r\n\t\t\t let gameState='gaming';\r\n\t\t//need user name array\r\n\t\tlet userName=['switch','noviah']\r\n\r\n\t\t//initalize the data\r\n\t\tthis.initCardData(0,405,85,'switch')\r\n\t\tthis.initCardData(0,730,85,'noviah')\r\n\r\n\t\tlet seat=0;\r\n\t\t\t\r\n\t\tthis.clickedBox(seat,userName)\r\n\t\t   \r\n\t}\r\n\r\n\t//check if the login user is in his round\r\n\tcheckUserInfo(name,x,y) {\r\n    Auth.currentUserInfo().then((userInfo) => {\r\n\t\t\tconst { username } = userInfo;\r\n      if(name==username){\r\n\t\t\t\tthis.updateCardData(3,x,y)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log('invaild movement')\t\r\n\t\t\t}\r\n\t\t\r\n\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\t\r\n\r\n\r\n\t//move card\r\n\tdecideMove(x,y,player){\r\n\t\tplayer.setX(x)\r\n\t\tplayer.setY(y)\r\n\t}\r\n\r\n\t//move the card to the side\r\n\thandlePlayerCard(card,arrangepostion,seat,data){\r\n\t\tif(seat==0&&data!=53){\r\n\t\tarrangepostion-=10\r\n\t\tcard.setX(10+arrangepostion);\r\n\t\tcard.setY(70);\r\n\t\tcard.setScale(0.1,0.1)\r\n\t\t}else if(seat==1&&data!=53){\r\n\t\tarrangepostion-=10\r\n\t\tcard.setX(900+arrangepostion);\r\n\t\tcard.setY(70);\r\n\t\tcard.setScale(0.1,0.1)\r\n\t\t}\r\n\t}\r\n\r\n//************************************************ */\r\n//the thing you need\r\n//*********************************************** */\r\n\r\nasync round(){\r\n\t(async () => { \r\n \r\n\t\tawait client.hydrated();\r\n\t\t//const getUser = await Auth.currentAuthenticatedUser();\r\n\t\t\t\t\t\t\r\n\t\tvar nameWeGot1 = 'switch';\r\n\t\tconst result1 = await client.query({\r\n\t\t\tquery: gql(queries.getQw),\r\n\t\t\tvariables: {\r\n\t\t\t\tusername: nameWeGot1\r\n\t\t\t},\r\n\t\t\tfetchPolicy: 'network-only',\r\n\t\t});\r\n\t  \r\n\t\t\r\n\t})();\r\n}\r\n\r\nasync initCardData(card,x,y,theusername){\r\n\tconst cardV = card;\r\n\tconsole.log(cardV)\r\n\tconst xV =x;\r\n\tconsole.log(\"x : \"+xV)\r\n\tconst yV = y;\r\n\tconsole.log(\"y : \"+yV);\r\n\tconst name = theusername;\r\n\tconsole.log('your name : ' +name);\r\n\tconst thething = {\r\n\t\t\t\tusername : name,\r\n\t\t\t\twhichCard : cardV,\r\n\t\t\t\t\t\tx : xV,\r\n\t\t\t\t\t\ty : yV\r\n\t\t\t\t\t};\r\n const newThing = await API.graphql(graphqlOperation(mutations.updateQw, {input: thething}));\r\n}\r\n\r\n\r\n\t\r\n\t\r\n\tasync updateCardData(card,x,y){\r\n\t\tconst cardV = card;\r\n\t\tconsole.log(cardV)\r\n\t\tconst xV =x;\r\n\t\tconsole.log(\"x : \"+xV)\r\n\t\tconst yV = y;\r\n\t\tconsole.log(\"y : \"+yV);\r\n\t\tconst getUser = await Auth.currentAuthenticatedUser();\r\n\t\t\t\t\t\t\tconst name = getUser.username;\r\n\t\t\t\t\t\t\tconsole.log('your name : ' +name);\r\n\t\tconst thething = {\r\n\t\t\t\t\tusername : name,\r\n\t\t\t\t\twhichCard : cardV,\r\n\t\t\t\t\t\t\tx : xV,\r\n\t\t\t\t\t\t\ty : yV\r\n\t\t\t\t\t\t};\r\n\t const newThing = await API.graphql(graphqlOperation(mutations.updateQw, {input: thething}));\r\n\t}\r\n\r\n\t\r\n\t\r\n\t\r\n\r\n\r\n\r\n\t//click the card and make it move\r\n\tclickedBox(seat,userName){\r\n\t\t\r\n\t\tvar arrangepostion=0;\r\n\t\tthis.input.on('gameobjectdown', (pointer, gameObject) => {\r\n\t\t\tfor(var i=0;i<36;i++){\r\n\t\t\t\tif(this.gameBoard[i] == i ){\r\n\t\t\t\t\tif(gameObject.x==this.player[seat].x||gameObject.y==this.player[seat].y){\r\n\t\t\t\t\t\tthis.checkUserInfo(userName[seat],gameObject.x,gameObject.y,this.player[seat])\r\n\t\t\t\t\t\t// this.handlePlayerCard(gameObject,arrangepostion,seat,gameObject.data.get('card_number'))\r\n\t\t\t\t\t\t// arrangepostion+=15\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\t}\t\r\n\t\r\n\t}\r\n\r\n\t\t\t\r\n\t});\r\n\r\n}\r\n\t\r\n\tupdate(time, delta) {\r\n\t\t(async () => { \r\n \r\n\t\t\tawait client.hydrated();\r\n\t\t\t//const getUser = await Auth.currentAuthenticatedUser();\r\n\t\t\t\t\t\t\t\r\n\t\t\tvar nameWeGot1 = 'switch';\r\n\t\t\tconst result1 = await client.query({\r\n\t\t\t\tquery: gql(queries.getQw),\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tusername: nameWeGot1\r\n\t\t\t\t},\r\n\t\t\t\tfetchPolicy: 'network-only',\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(result1.data.getQw.whichCard==3){\r\n\t\t\t\t this.decideMove(result1.data.getQw.x,result1.data.getQw.y,this.player[0])\r\n\t\t\t\t this.updateCardData(2,result1.data.getQw.x,result1.data.getQw.y)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})();\r\n\r\n\t\t\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}