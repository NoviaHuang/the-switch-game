{"ast":null,"code":"/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar GetLineToRectangle = require('./GetLineToRectangle');\n\nvar RectangleToRectangle = require('./RectangleToRectangle');\n/**\r\n * Checks if two Rectangles intersect and returns the intersection points as a Point object array.\r\n *\r\n * A Rectangle intersects another Rectangle if any part of its bounds is within the other Rectangle's bounds. As such, the two Rectangles are considered \"solid\". A Rectangle with no width or no height will never intersect another Rectangle.\r\n *\r\n * @function Phaser.Geom.Intersects.GetRectangleToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectA - The first Rectangle to check for intersection.\r\n * @param {Phaser.Geom.Rectangle} rectB - The second Rectangle to check for intersection.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\n\n\nvar GetRectangleToRectangle = function GetRectangleToRectangle(rectA, rectB, out) {\n  if (out === undefined) {\n    out = [];\n  }\n\n  if (RectangleToRectangle(rectA, rectB)) {\n    var lineA = rectA.getLineA();\n    var lineB = rectA.getLineB();\n    var lineC = rectA.getLineC();\n    var lineD = rectA.getLineD();\n    GetLineToRectangle(lineA, rectB, out);\n    GetLineToRectangle(lineB, rectB, out);\n    GetLineToRectangle(lineC, rectB, out);\n    GetLineToRectangle(lineD, rectB, out);\n  }\n\n  return out;\n};\n\nmodule.exports = GetRectangleToRectangle;","map":null,"metadata":{},"sourceType":"script"}