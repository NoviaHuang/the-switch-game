{"ast":null,"code":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * A function to process the collision callbacks between a single tile and an Arcade Physics enabled Game Object.\n *\n * @function Phaser.Physics.Arcade.Tilemap.ProcessTileCallbacks\n * @since 3.0.0\n *\n * @param {Phaser.Tilemaps.Tile} tile - The Tile to process.\n * @param {Phaser.GameObjects.Sprite} sprite - The Game Object to process with the Tile.\n *\n * @return {boolean} The result of the callback, `true` for further processing, or `false` to skip this pair.\n */\nvar ProcessTileCallbacks = function ProcessTileCallbacks(tile, sprite) {\n  //  Tile callbacks take priority over layer level callbacks\n  if (tile.collisionCallback) {\n    return !tile.collisionCallback.call(tile.collisionCallbackContext, sprite, tile);\n  } else if (tile.layer.callbacks[tile.index]) {\n    return !tile.layer.callbacks[tile.index].callback.call(tile.layer.callbacks[tile.index].callbackContext, sprite, tile);\n  }\n\n  return true;\n};\n\nmodule.exports = ProcessTileCallbacks;","map":null,"metadata":{},"sourceType":"script"}