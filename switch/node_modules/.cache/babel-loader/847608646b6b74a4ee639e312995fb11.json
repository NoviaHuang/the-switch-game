{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\src\\\\Pages\\\\RoomPage.js\";\nimport React, { Component } from 'react';\nimport RoomListPage from './RoomListPage';\nimport './RoomPage.css';\nimport Game from './phaser/Game';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { withRouter } from 'react-router-dom';\nimport * as mutations from '../graphql/mutations';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport aws_config from '../aws-exports';\nimport { Auth } from 'aws-amplify';\nimport * as queries from './phaser/../../graphql/queries';\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\nimport { Button, Card } from 'react-bootstrap';\nimport { SelectMFAType } from 'aws-amplify-react/dist/Widget';\nimport { type } from 'os';\nvar subtoRoomData2 = \"\\n  subscription{\\n    onUpdateReadyPageTable{\\n        roomID players readyStatus cards GameStart\\n    }\\n  }\\n  \";\n\nvar RoomPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RoomPage, _React$Component);\n\n  function RoomPage() {\n    var _this;\n\n    _classCallCheck(this, RoomPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RoomPage).call(this));\n    _this.state = {\n      showGame: false,\n      isRoomMaster: true,\n      isReady: false,\n      num_ready: 0,\n      roomOwner: false,\n      playersList: ['p1', 'p2', 'p3', 'p4'],\n      roomid: Number,\n      str: ['Not Ready ....', 'Not Ready ....', 'Not Ready ....', 'Not Ready ....']\n    };\n    _this.handleBackClick = _this.handleBackClick.bind(_assertThisInitialized(_this));\n    _this.handleStartClick = _this.handleStartClick.bind(_assertThisInitialized(_this));\n    _this.handleReadyClick = _this.handleReadyClick.bind(_assertThisInitialized(_this));\n    _this.showReadyButton = _this.showReadyButton.bind(_assertThisInitialized(_this));\n    _this.showStartButton = _this.showStartButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RoomPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.waitAndGetList();\n                data = this.props.location.query;\n                console.log('data from list ' + data);\n                this.setState({\n                  roomid: data\n                });\n                this.subU = API.graphql(graphqlOperation(subtoRoomData2)).subscribe({\n                  next: function next(roomData) {\n                    console.log(roomData.value.data.onUpdateReadyPageTable.players);\n                    console.log(roomData.value.data.onUpdateReadyPageTable.readyNum);\n                    console.log(roomData.value.data.onUpdateReadyPageTable.readyStatus);\n                    var newPlyersList = roomData.value.data.onUpdateReadyPageTable.players;\n                    var newReadyNum = roomData.value.data.onUpdateReadyPageTable.readyNum;\n                    var newReadyStatus = roomData.value.data.onUpdateReadyPageTable.readyStatus;\n                    var newGameStart = roomData.value.data.onUpdateReadyPageTable.GameStart;\n                    console.log('show me the gamestart : ' + newGameStart);\n\n                    _this2.setRoomOwner();\n\n                    _this2.setReadyStatus();\n\n                    _this2.setState({\n                      playersList: newPlyersList,\n                      num_ready: newReadyNum,\n                      readyStatus: newReadyStatus,\n                      str: newReadyStatus,\n                      showGame: newGameStart\n                    });\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.subU.unsubscribe();\n    }\n  }, {\n    key: \"setReadyStatus\",\n    value: function () {\n      var _setReadyStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var data, getPlayers, temp, i;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = this.props.location.query;\n                _context2.next = 3;\n                return API.graphql(graphqlOperation(queries.getReadyPageTable, {\n                  roomID: data\n                }));\n\n              case 3:\n                getPlayers = _context2.sent;\n                temp = [];\n\n                for (i = 0; i < getPlayers.data.getReadyPageTable.readyStatus.length; i++) {\n                  temp.push(getPlayers.data.getReadyPageTable.readyStatus[i]);\n                }\n\n                this.setState({\n                  str: temp\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setReadyStatus() {\n        return _setReadyStatus.apply(this, arguments);\n      }\n\n      return setReadyStatus;\n    }()\n  }, {\n    key: \"setRoomOwner\",\n    value: function () {\n      var _setRoomOwner = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var getUser, name, data, getPlayers, list;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Auth.currentAuthenticatedUser();\n\n              case 2:\n                getUser = _context3.sent;\n                name = getUser.username;\n                data = this.props.location.query;\n                console.log('data from list ' + data);\n                _context3.next = 8;\n                return API.graphql(graphqlOperation(queries.getRoompage, {\n                  roomid: data\n                }));\n\n              case 8:\n                getPlayers = _context3.sent;\n                list = getPlayers.data.getRoompage.players;\n\n                if (list[0] == name) {\n                  this.setState({\n                    roomOwner: true\n                  });\n                }\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setRoomOwner() {\n        return _setRoomOwner.apply(this, arguments);\n      }\n\n      return setRoomOwner;\n    }()\n  }, {\n    key: \"waitAndGetList\",\n    value: function () {\n      var _waitAndGetList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log('Just~~~~~~~~');\n                _context4.next = 3;\n                return this.sleep(250);\n\n              case 3:\n                console.log('wait 1 second');\n                this.setPlayers();\n                this.setRoomOwner();\n                this.setReadyStatus();\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function waitAndGetList() {\n        return _waitAndGetList.apply(this, arguments);\n      }\n\n      return waitAndGetList;\n    }()\n  }, {\n    key: \"sleep\",\n    value: function sleep(ms) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, ms);\n      });\n    }\n  }, {\n    key: \"getPlayersByID\",\n    value: function getPlayersByID() {\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var getUser, name, getRoomID, result, getPlayersInTheRoom, playerlist;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Auth.currentAuthenticatedUser();\n\n              case 2:\n                getUser = _context5.sent;\n                name = getUser.username;\n                _context5.next = 6;\n                return API.graphql(graphqlOperation(queries.getQw, {\n                  username: name\n                }));\n\n              case 6:\n                getRoomID = _context5.sent;\n                result = getRoomID.data.getQw.roomID;\n                console.log('the name is ' + name);\n                console.log('roomid ' + result);\n                console.log('type of result : ' + typeof result);\n                _context5.next = 13;\n                return API.graphql(graphqlOperation(queries.getRoompage, {\n                  roomid: result\n                }));\n\n              case 13:\n                getPlayersInTheRoom = _context5.sent;\n                playerlist = getPlayersInTheRoom.data.getRoompage.players;\n                console.log('players you have : ' + playerlist);\n                console.log('type of playerlist : ' + typeof playerlist);\n                console.log('player 1 is ' + playerlist[0]);\n\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  }, {\n    key: \"setPlayers\",\n    value: function () {\n      var _setPlayers = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var _this3 = this;\n\n        var data;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                data = this.props.location.query;\n                console.log('check at fun ' + data);\n\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee6() {\n                  var getPlayers, list;\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return API.graphql(graphqlOperation(queries.getRoompage, {\n                            roomid: data\n                          }));\n\n                        case 2:\n                          getPlayers = _context6.sent;\n                          list = getPlayers.data.getRoompage.players;\n\n                          _this3.setState({\n                            playersList: list\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }))();\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setPlayers() {\n        return _setPlayers.apply(this, arguments);\n      }\n\n      return setPlayers;\n    }()\n  }, {\n    key: \"handleBackClick\",\n    value: function handleBackClick(e) {\n      var _this4 = this;\n\n      e.preventDefault();\n      this.setState({\n        showGame: false\n      });\n\n      if (this.state.isReady == true || this.state.roomOwner == true) {\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee8() {\n          var storelist, getUser, name, data, getPlayers, getNumber, number, i, index, newstr;\n          return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  storelist = [];\n                  _context8.next = 3;\n                  return Auth.currentAuthenticatedUser();\n\n                case 3:\n                  getUser = _context8.sent;\n                  name = getUser.username;\n                  data = _this4.props.location.query;\n                  _context8.next = 8;\n                  return API.graphql(graphqlOperation(queries.getRoompage, {\n                    roomid: data\n                  }));\n\n                case 8:\n                  getPlayers = _context8.sent;\n                  _context8.next = 11;\n                  return API.graphql(graphqlOperation(queries.getReadyPageTable, {\n                    roomID: data\n                  }));\n\n                case 11:\n                  getNumber = _context8.sent;\n                  number = getNumber.data.getReadyPageTable.readyNum;\n                  console.log('ready number ' + number);\n\n                  for (i = 0; i < getPlayers.data.getRoompage.players.length; i++) {\n                    storelist.push(getPlayers.data.getRoompage.players[i]);\n                  }\n\n                  index = storelist.findIndex(function (num) {\n                    return num === name;\n                  });\n                  newstr = _this4.state.str;\n                  newstr[index] = 'Not Ready ....';\n                  _context8.next = 20;\n                  return API.graphql(graphqlOperation(mutations.updateReadyPageTable, {\n                    input: {\n                      roomID: data,\n                      readyNum: number - 1,\n                      readyStatus: newstr\n                    }\n                  }));\n\n                case 20:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }))();\n      }\n\n      var data = this.props.location.query;\n      console.log('data from list ' + data);\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var getUser, name, getPlayers, list, result, count, property;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return Auth.currentAuthenticatedUser();\n\n              case 2:\n                getUser = _context9.sent;\n                name = getUser.username;\n                _context9.next = 6;\n                return API.graphql(graphqlOperation(queries.getRoompage, {\n                  roomid: data\n                }));\n\n              case 6:\n                getPlayers = _context9.sent;\n                list = getPlayers.data.getRoompage.players;\n                result = list.filter(function (players) {\n                  return players != name;\n                });\n                _context9.next = 11;\n                return API.graphql(graphqlOperation(mutations.updateReadyPageTable, {\n                  input: {\n                    roomID: data,\n                    players: result\n                  }\n                }));\n\n              case 11:\n                _context9.next = 13;\n                return API.graphql(graphqlOperation(mutations.updateRoompage, {\n                  input: {\n                    roomid: data,\n                    players: result\n                  }\n                }));\n\n              case 13:\n                console.log(typeof result);\n                count = 0;\n\n                for (property in result) {\n                  if (Object.prototype.hasOwnProperty.call(result, property)) {\n                    count++;\n                  }\n                }\n\n                if (!(count == 0)) {\n                  _context9.next = 21;\n                  break;\n                }\n\n                _context9.next = 19;\n                return API.graphql(graphqlOperation(mutations.deleteRoompage, {\n                  input: {\n                    roomid: data\n                  }\n                }));\n\n              case 19:\n                _context9.next = 21;\n                return API.graphql(graphqlOperation(mutations.deleteReadyPageTable, {\n                  input: {\n                    roomID: data\n                  }\n                }));\n\n              case 21:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n\n      this.props.history.push('/room-list');\n    }\n  }, {\n    key: \"handleStartClick\",\n    value: function () {\n      var _handleStartClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(e) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                e.preventDefault(); //need to check if the room has 4 players, otherwise cannot start the game as well\n\n                this.setState({\n                  showGame: true\n                });\n                data = this.props.location.query;\n                _context10.next = 5;\n                return API.graphql(graphqlOperation(mutations.updateReadyPageTable, {\n                  input: {\n                    roomID: data,\n                    GameStart: true\n                  }\n                }));\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function handleStartClick(_x) {\n        return _handleStartClick.apply(this, arguments);\n      }\n\n      return handleStartClick;\n    }()\n  }, {\n    key: \"handleReadyClick\",\n    value: function () {\n      var _handleReadyClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(e) {\n        var storelist, getUser, name, data, getPlayers, getNumber, number, i, index, newstr, _storelist, _getUser, _name, _data, _getPlayers, _getNumber, _number, list, _i;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!(this.state.isReady == true || this.state.roomOwner == true)) {\n                  _context11.next = 26;\n                  break;\n                }\n\n                this.setState({\n                  num_ready: this.state.num_ready - 1,\n                  isReady: false\n                });\n                storelist = [];\n                _context11.next = 6;\n                return Auth.currentAuthenticatedUser();\n\n              case 6:\n                getUser = _context11.sent;\n                name = getUser.username;\n                data = this.props.location.query;\n                _context11.next = 11;\n                return API.graphql(graphqlOperation(queries.getRoompage, {\n                  roomid: data\n                }));\n\n              case 11:\n                getPlayers = _context11.sent;\n                _context11.next = 14;\n                return API.graphql(graphqlOperation(queries.getReadyPageTable, {\n                  roomID: data\n                }));\n\n              case 14:\n                getNumber = _context11.sent;\n                number = getNumber.data.getReadyPageTable.readyNum;\n                console.log('ready number ' + number);\n\n                for (i = 0; i < getPlayers.data.getRoompage.players.length; i++) {\n                  storelist.push(getPlayers.data.getRoompage.players[i]);\n                }\n\n                index = storelist.findIndex(function (num) {\n                  return num === name;\n                });\n                newstr = this.state.str;\n                newstr[index] = 'Not Ready ....';\n                _context11.next = 23;\n                return API.graphql(graphqlOperation(mutations.updateReadyPageTable, {\n                  input: {\n                    roomID: data,\n                    readyNum: number - 1,\n                    readyStatus: newstr\n                  }\n                }));\n\n              case 23:\n                this.setState({\n                  str: newstr\n                });\n                _context11.next = 50;\n                break;\n\n              case 26:\n                this.setState({\n                  num_ready: this.state.num_ready + 1,\n                  isReady: !this.state.isReady\n                });\n                _storelist = [];\n                _context11.next = 30;\n                return Auth.currentAuthenticatedUser();\n\n              case 30:\n                _getUser = _context11.sent;\n                _name = _getUser.username;\n                _data = this.props.location.query;\n                _context11.next = 35;\n                return API.graphql(graphqlOperation(queries.getRoompage, {\n                  roomid: _data\n                }));\n\n              case 35:\n                _getPlayers = _context11.sent;\n                _context11.next = 38;\n                return API.graphql(graphqlOperation(queries.getReadyPageTable, {\n                  roomID: _data\n                }));\n\n              case 38:\n                _getNumber = _context11.sent;\n                _number = _getNumber.data.getReadyPageTable.readyNum;\n                console.log('ready number ' + _number);\n                list = _getPlayers.data.getRoompage.players;\n\n                for (_i = 0; _i < _getPlayers.data.getRoompage.players.length; _i++) {\n                  _storelist.push(_getPlayers.data.getRoompage.players[_i]);\n                }\n\n                index = _storelist.findIndex(function (num) {\n                  return num === _name;\n                });\n                console.log('index is ' + index);\n                newstr = this.state.str;\n                newstr[index] = 'Ready !!!!!!!!!!!';\n                _context11.next = 49;\n                return API.graphql(graphqlOperation(mutations.updateReadyPageTable, {\n                  input: {\n                    roomID: _data,\n                    readyNum: _number + 1,\n                    readyStatus: newstr\n                  }\n                }));\n\n              case 49:\n                this.setState({\n                  str: newstr\n                });\n\n              case 50:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function handleReadyClick(_x2) {\n        return _handleReadyClick.apply(this, arguments);\n      }\n\n      return handleReadyClick;\n    }()\n  }, {\n    key: \"showReadyButton\",\n    value: function showReadyButton() {\n      if (this.state.roomOwner == false) {\n        if (this.state.isReady == true) {\n          return React.createElement(Button, {\n            className: \"unready-button\",\n            variant: \"danger\",\n            onClick: this.handleReadyClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360\n            },\n            __self: this\n          }, \"Unready\");\n        } else {\n          return React.createElement(Button, {\n            className: \"ready-button\",\n            variant: \"success\",\n            onClick: this.handleReadyClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 365\n            },\n            __self: this\n          }, \"Ready\");\n        }\n      }\n    }\n  }, {\n    key: \"showStartButton\",\n    value: function showStartButton() {\n      if (this.state.num_ready == 3 && this.state.roomOwner == true) {\n        return React.createElement(Button, {\n          className: \"start-button\",\n          variant: \"success\",\n          onClick: this.handleStartClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, \"Start\");\n      } else {\n        return React.createElement(Button, {\n          className: \"disabled-start-button\",\n          variant: \"secondary\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          },\n          __self: this\n        }, \"Start\");\n      }\n    } //only show button under the player's own card\n\n  }, {\n    key: \"showPlayer\",\n    value: function showPlayer(i) {\n      if (i == 0) {\n        return React.createElement(Card, {\n          bg: \"warning\",\n          style: {\n            width: '20rem'\n          },\n          className: \"master-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }, \"Room Master : \", this.state.playersList[0]), this.showStartButton()));\n      } else {\n        if (this.state.isReady == true) {\n          return React.createElement(Card, {\n            style: {\n              width: '20rem'\n            },\n            className: \"player-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 400\n            },\n            __self: this\n          }, React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            bg: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 404\n            },\n            __self: this\n          }, \"Player \", i, \" :\", this.state.playersList[i])), React.createElement(Card.Footer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 408\n            },\n            __self: this\n          }, this.state.str[i]));\n        } else {\n          return React.createElement(Card, {\n            style: {\n              width: '20rem'\n            },\n            className: \"player-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 417\n            },\n            __self: this\n          }, React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 419\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 421\n            },\n            __self: this\n          }, \"Player \", i, \" :\", this.state.playersList[i])), React.createElement(Card.Footer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 425\n            },\n            __self: this\n          }, this.state.str[i]));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(\"head\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n        integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n        crossorigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"room-back-button\",\n        variant: \"secondary\",\n        onClick: this.handleBackClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"Back\"), this.state.showGame ? React.createElement(Game, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"room-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"Room #\", this.state.roomid), this.showReadyButton(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }), this.showPlayer(0), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), this.showPlayer(1), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }), this.showPlayer(2), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }), this.showPlayer(3)));\n    }\n  }]);\n\n  return RoomPage;\n}(React.Component);\n\nexport default withRouter(withAuthenticator(RoomPage, true));","map":{"version":3,"sources":["C:\\Users\\shirl\\Documents\\GitHub\\the-switch-game\\switch\\src\\Pages\\RoomPage.js"],"names":["React","Component","RoomListPage","Game","withAuthenticator","withRouter","mutations","AWSAppSyncClient","AUTH_TYPE","aws_config","Auth","queries","Amplify","API","graphqlOperation","Button","Card","SelectMFAType","type","subtoRoomData2","RoomPage","state","showGame","isRoomMaster","isReady","num_ready","roomOwner","playersList","roomid","Number","str","handleBackClick","bind","handleStartClick","handleReadyClick","showReadyButton","showStartButton","waitAndGetList","data","props","location","query","console","log","setState","subU","graphql","subscribe","next","roomData","value","onUpdateReadyPageTable","players","readyNum","readyStatus","newPlyersList","newReadyNum","newReadyStatus","newGameStart","GameStart","setRoomOwner","setReadyStatus","unsubscribe","getReadyPageTable","roomID","getPlayers","temp","i","length","push","currentAuthenticatedUser","getUser","name","username","getRoompage","list","sleep","setPlayers","ms","Promise","resolve","setTimeout","getQw","getRoomID","result","getPlayersInTheRoom","playerlist","e","preventDefault","storelist","getNumber","number","index","findIndex","num","newstr","updateReadyPageTable","input","filter","updateRoompage","count","property","Object","prototype","hasOwnProperty","call","deleteRoompage","deleteReadyPageTable","history","width","showPlayer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport RoomListPage from './RoomListPage';\r\nimport './RoomPage.css';\r\nimport Game from './phaser/Game';\r\nimport { withAuthenticator } from 'aws-amplify-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as mutations from '../graphql/mutations';\r\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\r\nimport aws_config from '../aws-exports';\r\nimport { Auth } from 'aws-amplify';\r\nimport * as queries from './phaser/../../graphql/queries';\r\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { SelectMFAType } from 'aws-amplify-react/dist/Widget';\r\nimport { type } from 'os';\r\n\r\n\r\n  const subtoRoomData2 = `\r\n  subscription{\r\n    onUpdateReadyPageTable{\r\n        roomID players readyStatus cards GameStart\r\n    }\r\n  }\r\n  `\r\n \r\n\r\nclass RoomPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            showGame: false,\r\n            isRoomMaster: true,\r\n            isReady: false,\r\n            num_ready: 0,\r\n            roomOwner : false,\r\n            playersList : ['p1','p2','p3','p4'],\r\n            roomid : Number,\r\n            str : ['Not Ready ....','Not Ready ....','Not Ready ....','Not Ready ....']\r\n        }\r\n        this.handleBackClick = this.handleBackClick.bind(this);\r\n        this.handleStartClick = this.handleStartClick.bind(this);\r\n        this.handleReadyClick = this.handleReadyClick.bind(this);\r\n        this.showReadyButton = this.showReadyButton.bind(this);\r\n        this.showStartButton = this.showStartButton.bind(this);\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        this.waitAndGetList();\r\n        const data = this.props.location.query;\r\n        console.log('data from list '+data);\r\n        this.setState({roomid:data});\r\n\r\n        this.subU = API.graphql(\r\n            graphqlOperation(subtoRoomData2)\r\n        ).subscribe({\r\n            next: (roomData) =>{\r\n               \r\n                console.log(roomData.value.data.onUpdateReadyPageTable.players);\r\n                console.log(roomData.value.data.onUpdateReadyPageTable.readyNum);\r\n                console.log(roomData.value.data.onUpdateReadyPageTable.readyStatus);\r\n                const newPlyersList = roomData.value.data.onUpdateReadyPageTable.players;\r\n                const newReadyNum = roomData.value.data.onUpdateReadyPageTable.readyNum;\r\n                const newReadyStatus = roomData.value.data.onUpdateReadyPageTable.readyStatus;\r\n                const newGameStart = roomData.value.data.onUpdateReadyPageTable.GameStart;\r\n                console.log('show me the gamestart : '+newGameStart);\r\n                this.setRoomOwner();\r\n                this.setReadyStatus()\r\n                this.setState({\r\n                    playersList : newPlyersList,\r\n                    num_ready : newReadyNum,\r\n                    readyStatus : newReadyStatus,\r\n                    str : newReadyStatus,\r\n                    showGame : newGameStart\r\n                })\r\n           \r\n            }\r\n        });\r\n        \r\n\r\n\r\n    \r\n    }\r\n    componentWillUnmount() {\r\n\r\n        this.subU.unsubscribe();\r\n\r\n      }\r\n\r\n    async setReadyStatus(){\r\n        const data = this.props.location.query;\r\n        const getPlayers = await API.graphql(graphqlOperation(queries.getReadyPageTable,{\r\n            roomID : data\r\n        }));\r\n        const temp = [];\r\n      \r\n        for(let i=0;i<getPlayers.data.getReadyPageTable.readyStatus.length;i++){\r\n            temp.push(getPlayers.data.getReadyPageTable.readyStatus[i]);\r\n            }\r\n        this.setState({\r\n            str : temp\r\n        })\r\n    }\r\n    async setRoomOwner(){\r\n        const getUser = await Auth.currentAuthenticatedUser();\r\n        const name = getUser.username;\r\n        const data = this.props.location.query;\r\n        console.log('data from list '+data);\r\n        const getPlayers = await API.graphql(graphqlOperation(queries.getRoompage,{\r\n            roomid : data\r\n        }));\r\n        const list = getPlayers.data.getRoompage.players;\r\n        if (list[0] == name ){\r\n            this.setState({\r\n                roomOwner : true\r\n            })\r\n        }\r\n\r\n    }\r\n    async waitAndGetList() {\r\n        console.log('Just~~~~~~~~');\r\n        await this.sleep(250);\r\n        console.log('wait 1 second');\r\n        this.setPlayers();\r\n        this.setRoomOwner();\r\n        this.setReadyStatus()\r\n       \r\n      }\r\n      sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms))\r\n      }\r\n      \r\n    \r\n    getPlayersByID(){\r\n        (async () => {\r\n            \r\n            const getUser = await Auth.currentAuthenticatedUser();\r\n            const name = getUser.username;\r\n            const getRoomID = await API.graphql(graphqlOperation(queries.getQw,{\r\n                username : name\r\n            }));\r\n            const result = getRoomID.data.getQw.roomID;\r\n            console.log('the name is '+ name);\r\n            console.log('roomid ' + result);\r\n            console.log('type of result : ' +typeof(result));\r\n            const getPlayersInTheRoom = await API.graphql(graphqlOperation(queries.getRoompage,{\r\n                roomid : result\r\n            }))\r\n            const playerlist = getPlayersInTheRoom.data.getRoompage.players;\r\n            console.log('players you have : '+ playerlist);\r\n            console.log('type of playerlist : '+ typeof(playerlist));\r\n            console.log('player 1 is ' + playerlist[0] );\r\n\r\n        })();\r\n    }\r\n    async setPlayers(){\r\n        const data = this.props.location.query;\r\n        console.log('check at fun ' + data);\r\n        (async () => {\r\n            const getPlayers = await API.graphql(graphqlOperation(queries.getRoompage,{\r\n                roomid : data\r\n            }));\r\n            \r\n            const list = getPlayers.data.getRoompage.players;\r\n            this.setState({\r\n                playersList : list\r\n            })\r\n            \r\n         \r\n        })();\r\n    }\r\n    handleBackClick(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            showGame: false\r\n        })\r\n        if(this.state.isReady == true || this.state.roomOwner == true){\r\n            (async () => {\r\n                const storelist = [];\r\n                const getUser = await Auth.currentAuthenticatedUser();\r\n                const name = getUser.username;\r\n                const data = this.props.location.query;\r\n                const getPlayers = await API.graphql(graphqlOperation(queries.getRoompage,{\r\n                roomid : data\r\n                }));\r\n                const getNumber = await API.graphql(graphqlOperation(queries.getReadyPageTable,{\r\n                    roomID : data\r\n                    }));\r\n                const number = getNumber.data.getReadyPageTable.readyNum;\r\n                console.log('ready number ' + number);\r\n                \r\n                \r\n                for(let i=0;i<getPlayers.data.getRoompage.players.length;i++){\r\n                    storelist.push(getPlayers.data.getRoompage.players[i]);\r\n                    }\r\n                var index = storelist.findIndex(num => num === name);\r\n                \r\n                var newstr = this.state.str;\r\n                newstr[index] = 'Not Ready ....';\r\n                await API.graphql(graphqlOperation(mutations.updateReadyPageTable,{\r\n                    input:{\r\n                        roomID : data,\r\n                        readyNum : number-1,\r\n                        readyStatus : newstr\r\n                    }}));\r\n            })();\r\n        }\r\n        const data = this.props.location.query;\r\n        console.log('data from list '+data);\r\n        (async () => {\r\n            const getUser = await Auth.currentAuthenticatedUser();\r\n            const name = getUser.username;\r\n            const getPlayers = await API.graphql(graphqlOperation(queries.getRoompage,{\r\n                roomid : data\r\n            }));\r\n            const list = getPlayers.data.getRoompage.players;\r\n            const result = list.filter(players => players != name);\r\n            await API.graphql(graphqlOperation(mutations.updateReadyPageTable,{\r\n                input : {\r\n                    roomID : data,\r\n                    players : result\r\n                }\r\n            }));\r\n            await API.graphql(graphqlOperation(mutations.updateRoompage,{\r\n                input : {\r\n                    roomid : data,\r\n                    players : result\r\n                }\r\n            }));\r\n            console.log(typeof(result));\r\n            var count=0;\r\n            for (var property in result) {\r\n                if (Object.prototype.hasOwnProperty.call(result, property)) {\r\n                    count++;\r\n                }\r\n            }\r\n            if(count == 0){\r\n                await API.graphql(graphqlOperation(mutations.deleteRoompage,{\r\n                    input:{\r\n                        roomid : data\r\n                    }\r\n                }))\r\n                await API.graphql(graphqlOperation(mutations.deleteReadyPageTable,{\r\n                    input:{\r\n                        roomID : data\r\n                    }\r\n                }))\r\n            }\r\n        })();\r\n        this.props.history.push('/room-list')\r\n    }\r\n\r\n  \r\n\r\n    async handleStartClick(e) {\r\n        e.preventDefault();\r\n        //need to check if the room has 4 players, otherwise cannot start the game as well\r\n        this.setState({\r\n            showGame: true\r\n\r\n        });\r\n        const data = this.props.location.query;\r\n        await API.graphql(graphqlOperation(mutations.updateReadyPageTable,{\r\n            input:{ \r\n                roomID : data,\r\n                GameStart : true \r\n            }}));\r\n    }\r\n\r\n    async handleReadyClick(e) {\r\n        e.preventDefault();\r\n        \r\n\r\n\r\n        if(this.state.isReady == true || this.state.roomOwner == true) {\r\n            this.setState({\r\n                num_ready: this.state.num_ready-1,\r\n                isReady : false\r\n            });\r\n                \r\n                const storelist = [];\r\n                const getUser = await Auth.currentAuthenticatedUser();\r\n                const name = getUser.username;\r\n                const data = this.props.location.query;\r\n                const getPlayers = await API.graphql(graphqlOperation(queries.getRoompage,{\r\n                roomid : data\r\n                }));\r\n                const getNumber = await API.graphql(graphqlOperation(queries.getReadyPageTable,{\r\n                    roomID : data\r\n                    }));\r\n                const number = getNumber.data.getReadyPageTable.readyNum;\r\n                console.log('ready number ' + number);\r\n                \r\n                \r\n                for(let i=0;i<getPlayers.data.getRoompage.players.length;i++){\r\n                    storelist.push(getPlayers.data.getRoompage.players[i]);\r\n                    }\r\n                var index = storelist.findIndex(num => num === name);\r\n                \r\n                var newstr = this.state.str;\r\n                newstr[index] = 'Not Ready ....';\r\n                await API.graphql(graphqlOperation(mutations.updateReadyPageTable,{\r\n                    input:{\r\n                        roomID : data,\r\n                        readyNum : number-1,\r\n                        readyStatus : newstr\r\n                    }}));\r\n                this.setState({\r\n                str : newstr\r\n                })    \r\n        }\r\n        else{\r\n         this.setState({\r\n                num_ready: this.state.num_ready+1 , isReady: !this.state.isReady\r\n            });   \r\n        \r\n            \r\n            const storelist = [];\r\n            const getUser = await Auth.currentAuthenticatedUser();\r\n            const name = getUser.username;\r\n            const data = this.props.location.query;\r\n            const getPlayers = await API.graphql(graphqlOperation(queries.getRoompage,{\r\n            roomid : data\r\n            }));\r\n            const getNumber = await API.graphql(graphqlOperation(queries.getReadyPageTable,{\r\n                roomID : data\r\n                }));\r\n            const number = getNumber.data.getReadyPageTable.readyNum;\r\n            console.log('ready number ' + number);\r\n            \r\n            const list = getPlayers.data.getRoompage.players;\r\n            for(let i=0;i<getPlayers.data.getRoompage.players.length;i++){\r\n                storelist.push(getPlayers.data.getRoompage.players[i]);\r\n                }\r\n            var index = storelist.findIndex(num => num === name);\r\n            console.log('index is ' +index);\r\n            var newstr = this.state.str;\r\n            newstr[index] = 'Ready !!!!!!!!!!!';\r\n            await API.graphql(graphqlOperation(mutations.updateReadyPageTable,{\r\n                input:{\r\n                    roomID : data,\r\n                    readyNum : number+1,\r\n                    readyStatus : newstr\r\n                }\r\n            }));\r\n            this.setState({\r\n            str : newstr\r\n            })    \r\n            \r\n    \r\n       \r\n    }\r\n    }\r\n\r\n    showReadyButton() {\r\n    if(this.state.roomOwner == false){    \r\n        if (this.state.isReady == true) {\r\n            \r\n            return (\r\n                <Button className=\"unready-button\" variant=\"danger\" onClick={this.handleReadyClick}>Unready</Button>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Button className=\"ready-button\" variant=\"success\" onClick={this.handleReadyClick}>Ready</Button>\r\n            )\r\n        }\r\n    }\r\n    }\r\n\r\n    showStartButton() {\r\n        if(this.state.num_ready == 3 && this.state.roomOwner == true) {\r\n            return (\r\n                <Button className=\"start-button\" variant=\"success\" onClick={this.handleStartClick}>Start</Button>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <Button className=\"disabled-start-button\" variant=\"secondary\" disabled>Start</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    //only show button under the player's own card\r\n    showPlayer(i) {\r\n        if(i == 0){\r\n            return(\r\n                <Card bg=\"warning\" style={{width: '20rem'}} className=\"master-card\">\r\n                    <Card.Body>\r\n                        <Card.Title>Room Master : {this.state.playersList[0]}</Card.Title>\r\n                        { this.showStartButton() }\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        }\r\n        else {\r\n            if(this.state.isReady == true){\r\n                return(\r\n                    \r\n                    <Card  style={{width: '20rem'}} className=\"player-card\">\r\n                        \r\n                        <Card.Body>\r\n                            \r\n                            <Card.Title bg='success'>Player {i} :{this.state.playersList[i]}</Card.Title>\r\n                            {/* { this.showReadyButton() } */}\r\n                            \r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            {this.state.str[i]}  \r\n                        </Card.Footer>\r\n                    </Card>\r\n                    \r\n                )\r\n            }\r\n            else {\r\n                return(\r\n                    <Card style={{width: '20rem'}} className=\"player-card\">\r\n                        \r\n                        <Card.Body>\r\n                            \r\n                            <Card.Title>Player {i} :{this.state.playersList[i]}</Card.Title>\r\n                            {/* { this.showReadyButton() } */}\r\n                           \r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            {this.state.str[i]}  \r\n                        </Card.Footer>\r\n                    </Card>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"room\">\r\n                <head>\r\n                    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\" />\r\n                </head>\r\n                <Button className=\"room-back-button\" variant=\"secondary\" onClick={this.handleBackClick}>Back</Button>\r\n                { this.state.showGame ? <Game /> : \r\n                    <div>\r\n                        <h1 className=\"room-header\">Room #{this.state.roomid}</h1>\r\n                        {this.showReadyButton()} \r\n                        <br />\r\n                        { this.showPlayer(0) }\r\n                        <br />\r\n                        { this.showPlayer(1) }\r\n                        <br />\r\n                        { this.showPlayer(2) }\r\n                        <br />\r\n                        { this.showPlayer(3) }\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(withAuthenticator(RoomPage,true));\r\n\r\n"]},"metadata":{},"sourceType":"module"}