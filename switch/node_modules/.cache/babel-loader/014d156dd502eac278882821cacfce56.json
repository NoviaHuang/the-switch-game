{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\nvar BuildGameObject = require('../BuildGameObject');\n\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\n\nvar Shader = require('./Shader');\n/**\r\n * Creates a new Shader Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Shader Game Object and WebGL support have been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#shader\r\n * @since 3.17.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Shader} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('shader', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var key = GetAdvancedValue(config, 'key', null);\n  var x = GetAdvancedValue(config, 'x', 0);\n  var y = GetAdvancedValue(config, 'y', 0);\n  var width = GetAdvancedValue(config, 'width', 128);\n  var height = GetAdvancedValue(config, 'height', 128);\n  var shader = new Shader(this.scene, key, x, y, width, height);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, shader, config);\n  return shader;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":null,"metadata":{},"sourceType":"script"}