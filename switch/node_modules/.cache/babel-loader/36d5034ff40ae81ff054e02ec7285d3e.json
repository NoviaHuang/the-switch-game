{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shirl\\\\Documents\\\\GitHub\\\\the-switch-game\\\\switch\\\\src\\\\Pages\\\\RoomPage.js\";\nimport React, { Component } from 'react';\nimport RoomListPage from './RoomListPage';\nimport './RoomPage.css';\nimport Game from './phaser/Game';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { withRouter } from 'react-router-dom';\nimport * as mutations from '../graphql/mutations';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport aws_config from '../aws-exports';\nimport { Auth } from 'aws-amplify';\nimport * as queries from './phaser/../../graphql/queries';\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\nimport { Button, Card } from 'react-bootstrap';\n\nvar RoomPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RoomPage, _React$Component);\n\n  function RoomPage() {\n    var _this;\n\n    _classCallCheck(this, RoomPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RoomPage).call(this));\n    _this.state = {\n      showGame: false,\n      isRoomMaster: true,\n      isReady: false,\n      num_ready: 1,\n      username: []\n    };\n    _this.handleBackClick = _this.handleBackClick.bind(_assertThisInitialized(_this));\n    _this.handleStartClick = _this.handleStartClick.bind(_assertThisInitialized(_this));\n    _this.handleReadyClick = _this.handleReadyClick.bind(_assertThisInitialized(_this));\n    _this.showReadyButton = _this.showReadyButton.bind(_assertThisInitialized(_this));\n    _this.showStartButton = _this.showStartButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RoomPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = this.props.location.query;\n      console.log('data from list ' + data);\n    }\n  }, {\n    key: \"handleBackClick\",\n    value: function handleBackClick(e) {\n      e.preventDefault();\n      this.setState({\n        showGame: false\n      });\n      var data = this.props.location.query;\n      console.log('data from list ' + data);\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var getUser, name, getPlayers, list, result, count, property;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Auth.currentAuthenticatedUser();\n\n              case 2:\n                getUser = _context.sent;\n                name = getUser.username;\n                _context.next = 6;\n                return API.graphql(graphqlOperation(queries.getRoompage, {\n                  roomid: data\n                }));\n\n              case 6:\n                getPlayers = _context.sent;\n                list = getPlayers.data.getRoompage.players;\n                result = list.filter(function (players) {\n                  return players != name;\n                });\n                _context.next = 11;\n                return API.graphql(graphqlOperation(mutations.updateRoompage, {\n                  input: {\n                    roomid: data,\n                    players: result\n                  }\n                }));\n\n              case 11:\n                console.log(typeof result);\n                count = 0;\n\n                for (property in result) {\n                  if (Object.prototype.hasOwnProperty.call(result, property)) {\n                    count++;\n                  }\n                }\n\n                if (!(count == 0)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 17;\n                return API.graphql(graphqlOperation(mutations.deleteRoompage, {\n                  input: {\n                    roomid: data\n                  }\n                }));\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n\n      this.props.history.push('/room-list');\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"handleStartClick\",\n    value: function handleStartClick(e) {\n      e.preventDefault(); //need to check if the room has 4 players, otherwise cannot start the game as well\n\n      this.setState({\n        showGame: true\n      });\n    }\n  }, {\n    key: \"handleReadyClick\",\n    value: function handleReadyClick(e) {\n      e.preventDefault();\n\n      if (this.state.isReady == true) {\n        console.log(\"false\");\n        this.setState({\n          num_ready: this.state.num_ready - 1\n        });\n      } else {\n        this.setState({\n          num_ready: this.state.num_ready + 1\n        });\n      }\n\n      this.setState({\n        isReady: !this.state.isReady\n      });\n    }\n  }, {\n    key: \"showReadyButton\",\n    value: function showReadyButton() {\n      if (this.state.isReady == true) {\n        return React.createElement(Button, {\n          className: \"unready-button\",\n          variant: \"danger\",\n          onClick: this.handleReadyClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Unready\");\n      } else {\n        return React.createElement(Button, {\n          className: \"ready-button\",\n          variant: \"success\",\n          onClick: this.handleReadyClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Ready\");\n      }\n    }\n  }, {\n    key: \"showStartButton\",\n    value: function showStartButton() {\n      if (this.state.num_ready == 3) {\n        return React.createElement(Button, {\n          className: \"start-button\",\n          variant: \"success\",\n          onClick: this.handleStartClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Start\");\n      } else {\n        return React.createElement(Button, {\n          className: \"disabled-start-button\",\n          variant: \"secondary\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Start\");\n      }\n    } //only show button under the player's own card\n\n  }, {\n    key: \"showPlayer\",\n    value: function showPlayer(i) {\n      if (i == 0) {\n        return React.createElement(Card, {\n          bg: \"warning\",\n          style: {\n            width: '20rem'\n          },\n          className: \"master-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"Room Master's Username\"), this.showStartButton()));\n      } else {\n        if (this.state.isReady == true) {\n          return React.createElement(Card, {\n            bg: \"success\",\n            style: {\n              width: '20rem'\n            },\n            className: \"player-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, \"Player's Username\"), this.showReadyButton()));\n        } else {\n          return React.createElement(Card, {\n            style: {\n              width: '20rem'\n            },\n            className: \"player-card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"Player's Username\"), this.showReadyButton()));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"room\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"head\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n        integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n        crossorigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleBackClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Back\"), React.createElement(\"h1\", {\n        className: \"room-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Show Room Number\"), this.state.showGame ? React.createElement(Game, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }) : null, this.showPlayer(0), this.showPlayer(1), this.showPlayer(2), this.showPlayer(3));\n    }\n  }]);\n\n  return RoomPage;\n}(React.Component);\n\nexport default withRouter(withAuthenticator(RoomPage, true));","map":{"version":3,"sources":["C:\\Users\\shirl\\Documents\\GitHub\\the-switch-game\\switch\\src\\Pages\\RoomPage.js"],"names":["React","Component","RoomListPage","Game","withAuthenticator","withRouter","mutations","AWSAppSyncClient","AUTH_TYPE","aws_config","Auth","queries","Amplify","API","graphqlOperation","Button","Card","RoomPage","state","showGame","isRoomMaster","isReady","num_ready","username","handleBackClick","bind","handleStartClick","handleReadyClick","showReadyButton","showStartButton","data","props","location","query","console","log","e","preventDefault","setState","currentAuthenticatedUser","getUser","name","graphql","getRoompage","roomid","getPlayers","list","players","result","filter","updateRoompage","input","count","property","Object","prototype","hasOwnProperty","call","deleteRoompage","history","push","i","width","showPlayer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport RoomListPage from './RoomListPage';\r\nimport './RoomPage.css';\r\nimport Game from './phaser/Game';\r\nimport { withAuthenticator } from 'aws-amplify-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as mutations from '../graphql/mutations';\r\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\r\nimport aws_config from '../aws-exports';\r\nimport { Auth } from 'aws-amplify';\r\nimport * as queries from './phaser/../../graphql/queries';\r\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nclass RoomPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            showGame: false,\r\n            isRoomMaster: true,\r\n            isReady: false,\r\n            num_ready: 1,\r\n            username: []\r\n        }\r\n        this.handleBackClick = this.handleBackClick.bind(this);\r\n        this.handleStartClick = this.handleStartClick.bind(this);\r\n        this.handleReadyClick = this.handleReadyClick.bind(this);\r\n        this.showReadyButton = this.showReadyButton.bind(this);\r\n        this.showStartButton = this.showStartButton.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const data = this.props.location.query;\r\n        console.log('data from list '+data);\r\n      \r\n    }\r\n    handleBackClick(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            showGame: false\r\n        })\r\n        const data = this.props.location.query;\r\n        console.log('data from list '+data);\r\n        (async () => {\r\n            const getUser = await Auth.currentAuthenticatedUser();\r\n            const name = getUser.username;\r\n            const getPlayers = await API.graphql(graphqlOperation(queries.getRoompage,{\r\n                roomid : data\r\n            }));\r\n            const list = getPlayers.data.getRoompage.players;\r\n            const result = list.filter(players => players != name);\r\n            await API.graphql(graphqlOperation(mutations.updateRoompage,{\r\n                input : {\r\n                    roomid : data,\r\n                    players : result\r\n                }\r\n            }));\r\n            console.log(typeof(result));\r\n            var count=0;\r\n            for (var property in result) {\r\n                if (Object.prototype.hasOwnProperty.call(result, property)) {\r\n                    count++;\r\n                }\r\n            }\r\n            if(count == 0){\r\n                await API.graphql(graphqlOperation(mutations.deleteRoompage,{\r\n                    input:{\r\n                        roomid : data\r\n                    }\r\n                }))\r\n            }\r\n        })();\r\n        this.props.history.push('/room-list')\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        \r\n    }\r\n\r\n    handleStartClick(e) {\r\n        e.preventDefault();\r\n        //need to check if the room has 4 players, otherwise cannot start the game as well\r\n        this.setState({\r\n            showGame: true\r\n        });\r\n        \r\n    }\r\n\r\n    handleReadyClick(e) {\r\n        e.preventDefault();\r\n        if(this.state.isReady == true) {\r\n            console.log(\"false\")\r\n            this.setState({\r\n                num_ready: this.state.num_ready-1\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                num_ready: this.state.num_ready+1\r\n            })\r\n        }\r\n        this.setState({\r\n            isReady: !this.state.isReady\r\n        })\r\n    }\r\n\r\n    showReadyButton() {\r\n        if (this.state.isReady == true) {\r\n            \r\n            return (\r\n                <Button className=\"unready-button\" variant=\"danger\" onClick={this.handleReadyClick}>Unready</Button>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Button className=\"ready-button\" variant=\"success\" onClick={this.handleReadyClick}>Ready</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    showStartButton() {\r\n        if(this.state.num_ready == 3) {\r\n            return (\r\n                <Button className=\"start-button\" variant=\"success\" onClick={this.handleStartClick}>Start</Button>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <Button className=\"disabled-start-button\" variant=\"secondary\" disabled>Start</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    //only show button under the player's own card\r\n    showPlayer(i) {\r\n        if(i == 0){\r\n            return(\r\n                <Card bg=\"warning\" style={{width: '20rem'}} className=\"master-card\">\r\n                    <Card.Body>\r\n                        <Card.Title>Room Master's Username</Card.Title>\r\n                        { this.showStartButton() }\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        }\r\n        else {\r\n            if(this.state.isReady == true){\r\n                return(\r\n                    <Card bg=\"success\" style={{width: '20rem'}} className=\"player-card\">\r\n                        <Card.Body>\r\n                            <Card.Title>Player's Username</Card.Title>\r\n                            { this.showReadyButton() }\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            }\r\n            else {\r\n                return(\r\n                    <Card style={{width: '20rem'}} className=\"player-card\">\r\n                        <Card.Body>\r\n                            <Card.Title>Player's Username</Card.Title>\r\n                            { this.showReadyButton() }\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"room\">\r\n                <head>\r\n                    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\" />\r\n                </head>\r\n                <Button variant=\"secondary\" onClick={this.handleBackClick}>Back</Button>\r\n                <h1 className=\"room-header\">Show Room Number</h1>\r\n                { this.state.showGame ? <Game /> : null }\r\n                { this.showPlayer(0) }\r\n                { this.showPlayer(1) }\r\n                { this.showPlayer(2) }\r\n                { this.showPlayer(3) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(withAuthenticator(RoomPage,true));\r\n\r\n"]},"metadata":{},"sourceType":"module"}