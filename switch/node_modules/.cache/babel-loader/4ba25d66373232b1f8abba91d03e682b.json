{"ast":null,"code":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Provides methods used for setting the enable properties of an Arcade Physics Body.\n *\n * @namespace Phaser.Physics.Arcade.Components.Enable\n * @since 3.0.0\n */\nvar Enable = {\n  /**\n   * Enables this Game Object's Body.\n   *\n   * @method Phaser.Physics.Arcade.Components.Enable#enableBody\n   * @since 3.0.0\n   *\n   * @param {boolean} reset - Also reset the Body and place it at (x, y).\n   * @param {number} x - The horizontal position to place the Game Object and Body.\n   * @param {number} y - The horizontal position to place the Game Object and Body.\n   * @param {boolean} enableGameObject - Also activate this Game Object.\n   * @param {boolean} showGameObject - Also show this Game Object.\n   *\n   * @return {this} This Game Object.\n   *\n   * @see Phaser.Physics.Arcade.Body#enable\n   * @see Phaser.Physics.Arcade.StaticBody#enable\n   * @see Phaser.Physics.Arcade.Body#reset\n   * @see Phaser.Physics.Arcade.StaticBody#reset\n   * @see Phaser.GameObjects.GameObject#active\n   * @see Phaser.GameObjects.GameObject#visible\n   */\n  enableBody: function enableBody(reset, x, y, enableGameObject, showGameObject) {\n    if (reset) {\n      this.body.reset(x, y);\n    }\n\n    if (enableGameObject) {\n      this.body.gameObject.active = true;\n    }\n\n    if (showGameObject) {\n      this.body.gameObject.visible = true;\n    }\n\n    this.body.enable = true;\n    return this;\n  },\n\n  /**\n   * Stops and disables this Game Object's Body.\n   *\n   * @method Phaser.Physics.Arcade.Components.Enable#disableBody\n   * @since 3.0.0\n   *\n   * @param {boolean} [disableGameObject=false] - Also deactivate this Game Object.\n   * @param {boolean} [hideGameObject=false] - Also hide this Game Object.\n   *\n   * @return {this} This Game Object.\n   *\n   * @see Phaser.Physics.Arcade.Body#enable\n   * @see Phaser.Physics.Arcade.StaticBody#enable\n   * @see Phaser.GameObjects.GameObject#active\n   * @see Phaser.GameObjects.GameObject#visible\n   */\n  disableBody: function disableBody(disableGameObject, hideGameObject) {\n    if (disableGameObject === undefined) {\n      disableGameObject = false;\n    }\n\n    if (hideGameObject === undefined) {\n      hideGameObject = false;\n    }\n\n    this.body.stop();\n    this.body.enable = false;\n\n    if (disableGameObject) {\n      this.body.gameObject.active = false;\n    }\n\n    if (hideGameObject) {\n      this.body.gameObject.visible = false;\n    }\n\n    return this;\n  },\n\n  /**\n   * Syncs the Body's position and size with its parent Game Object.\n   * You don't need to call this for Dynamic Bodies, as it happens automatically.\n   * But for Static bodies it's a useful way of modifying the position of a Static Body\n   * in the Physics World, based on its Game Object.\n   *\n   * @method Phaser.Physics.Arcade.Components.Enable#refreshBody\n   * @since 3.1.0\n   *\n   * @return {this} This Game Object.\n   *\n   * @see Phaser.Physics.Arcade.StaticBody#updateFromGameObject\n   */\n  refreshBody: function refreshBody() {\n    this.body.updateFromGameObject();\n    return this;\n  }\n};\nmodule.exports = Enable;","map":null,"metadata":{},"sourceType":"script"}