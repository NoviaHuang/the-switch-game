{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\n\n/**\r\n * @ignore\r\n */\nfunction P0(t, p) {\n  var k = 1 - t;\n  return k * k * p;\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction P1(t, p) {\n  return 2 * (1 - t) * t * p;\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction P2(t, p) {\n  return t * t * p;\n} // https://github.com/mrdoob/three.js/blob/master/src/extras/core/Interpolations.js\n\n/**\r\n * A quadratic bezier interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.QuadraticBezier\r\n * @since 3.2.0\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} p0 - The start point.\r\n * @param {number} p1 - The control point.\r\n * @param {number} p2 - The end point.\r\n *\r\n * @return {number} The interpolated value.\r\n */\n\n\nvar QuadraticBezierInterpolation = function QuadraticBezierInterpolation(t, p0, p1, p2) {\n  return P0(t, p0) + P1(t, p1) + P2(t, p2);\n};\n\nmodule.exports = QuadraticBezierInterpolation;","map":null,"metadata":{},"sourceType":"script"}